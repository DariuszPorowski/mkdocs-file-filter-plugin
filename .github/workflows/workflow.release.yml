---
name: Release

on:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ format('{0}-{1}', github.event_name, github.ref) }}
  cancel-in-progress: false

jobs:
  pypi-release:
    name: PyPI Release
    environment:
      name: PyPI
      url: https://pypi.org/project/mkdocs-file-filter-plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install --verbose --without=dev

      - name: Build
        run: poetry build --verbose

      - name: Publish to PyPI
        run: poetry publish --verbose --username=__token__ --password "${PYPI_API_TOKEN}"
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      - name: Upload build to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugin
          path: |
            dist/*
            schema*.json

  gh-release-update:
    name: Update GitHub Release
    needs: pypi-release
    environment:
      name: github-releases
      url: ${{ steps.gh-release.outputs.url }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build from artifacts
        uses: actions/download-artifact@v3
        with:
          name: plugin
          path: .

      - name: Upload build artifacts to release
        id: gh-release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          files: |
            dist/*
            schema*.json

      # https://docs.github.com/en/rest/releases/releases#update-a-release
      - name: Mark as latest
        uses: octokit/request-action@v2.1.7
        id: set_release_make_latest
        with:
          route: PATCH /repos/{repo}/releases/{release_id}
          repo: ${{ github.repository }}
          release_id: ${{ steps.gh-release.outputs.id }}
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ github.token }}

  gh-pages-build:
    name: GitHub Pages (build)
    needs: gh-release-update
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          verbose: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  gh-pages-deploy:
    name: GitHub Pages (deploy)
    needs: gh-pages-build
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
