---
name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  pypi-release:
    name: PyPI Release
    environment:
      name: PyPI
      url: https://pypi.org/project/mkdocs-file-filter-plugin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install --verbose --without=dev

      - name: Build
        run: poetry build --verbose

      - name: Publish to PyPI
        run: poetry publish --verbose --username=__token__ --password ${{ secrets.PYPI_API_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: plugin
          path: |
            dist/*
            schema*.json

  gh-release:
    name: GitHub Release
    needs: pypi-release
    environment:
      name: github-releases
      url: ${{ steps.gh-release.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: plugin
          path: .

      - name: Release
        id: gh-release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            dist/*
            schema*.json

  gh-pages-build:
    name: GitHub Pages (build)
    needs: gh-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          verbose: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  gh-pages-deploy:
    name: GitHub Pages (deploy)
    needs: gh-pages-build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
